name: Java Backend CI

on:
  push:
    paths:
      - 'src/**'
      - 'pom.xml'
      - 'Dockerfile'    # if you want to trigger when Dockerfile changes
    branches: [ "main" ]
  pull_request:
    paths:
      - 'src/**'
      - 'pom.xml'
      - 'Dockerfile'
    branches: [ "main" ]

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    outputs:
      commit: ${{ steps.commit_hash.outputs.commit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Print confirmation
        run: echo "‚úÖ Code checked out"

      - name: Get commit hash
        id: commit_hash
        run: echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  build:
    name: Build with Maven
    needs: checkout
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Build project
        run: |
          echo "üèóÔ∏è Building project..."
          mvn clean install -DskipTests=true

  test:
    name: Run Unit Tests
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ 
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Run unit tests
        run: |
          echo "üß™ Running tests..."
          mvn test

  docker-build-and-push:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t fatb0y13/react-jwt-login-backend:latest .

      - name: Push Docker image
        run: |
          docker push fatb0y13/react-jwt-login-backend:latest